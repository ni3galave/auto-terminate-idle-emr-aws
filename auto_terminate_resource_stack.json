{
  "Description": "Sample CloudFormation template for creating an resource's for auto termination emr",
  "Parameters": {
    "s3Bucket": {
      "Default": "emr-shutdown-blogartifacts",
      "Description": "s3 bucket name of the lambda",
      "Type": "String"
    },
    "s3Key": {
      "Default": "EMRTerminate.zip",
      "Description": "s3 bucket key of the lambda",
      "Type": "String"
    },
    "SNSSubscribeTopic": {
      "Default": "TerminateEMRSNSTopic",
      "Description": "ARN of the SNS Topic that triggers the lambda",
      "Type": "String"
    }
  },
  "Resources": {
    "EMRJobFlowRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "EMRServiceRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "elasticmapreduce.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole"
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "TerminateEMRLambdaFunction": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "s3Bucket"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "FunctionName": "TerminateEMRLambdaFunction",
        "Handler": "lambda_function.lambda_handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "TerminateEMRRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": "60"
      },
      "Type": "AWS::Lambda::Function"
    },
    "TerminateEMRRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:ListAllMyBuckets",
                    "s3:HeadBucket",
                    "s3:ListObjects",
                    "s3:GetObject",
                    "cloudformation:ListStacks",
                    "cloudformation:DeleteStack",
                    "cloudformation:DescribeStacks",
                    "cloudformation:ListStackResources",
                    "elasticmapreduce:TerminateJobFlows",
                    "elasticmapreduce:DescribeCluster",
                    "cloudwatch:DeleteAlarms",
                    "lambda:RemovePermission",
                    "lambda:DeleteFunction",
                    "SNS:DeleteTopic",
                    "SNS:GetTopicAttributes",
                    "iam:DeleteRole",
                    "iam:RemoveRoleFromInstanceProfile",
                    "iam:DetachRolePolicy",
                    "iam:DeleteRolePolicy",
                    "iam:DeleteInstanceProfile"
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid":"GenericAccess"
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:*",
                  "Sid":"LogAccess"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "TerminateEMRLambdaIAMPolicy"
          }
        ],
        "RoleName": "TerminateEMRLambdaIAMRole"
      },
      "Type": "AWS::IAM::Role"
    },
    "TerminateEMRSNSTopic": {
      "Properties": {
        "DisplayName": "Kill Idle EMR",
        "Subscription": [
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "TerminateEMRLambdaFunction",
                "Arn"
              ]
            },
            "Protocol": "lambda"
          }
        ],
        "TopicName": "TerminateEMRSNSTopic"
      },
      "Type": "AWS::SNS::Topic"
    },
    "LambdaInvokePermission":{
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": { "Ref": "TerminateEMRSNSTopic" },
        "FunctionName": {
          "Fn::GetAtt": [ "TerminateEMRLambdaFunction", "Arn" ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    }
  }
}